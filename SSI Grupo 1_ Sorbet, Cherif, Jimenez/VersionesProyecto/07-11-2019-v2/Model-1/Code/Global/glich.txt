distIzq, distDer, distMax : INTEGER;
tmpNumNodos : INTEGER;
tmpArrIdProgramas := CreateArray("INTEGER", 1 , 16{Entity.nProcesos});
arrIndex : INTEGER;
arrIndex := 0;
aisladoFLAG: BOOLEAN;
aisladoFLAG := TRUE;

tmpNumNodos := Model.nNodos;
distMax := 0;

x, y : INTEGER;	


FOR i:=0 TO Model.nNodos

	IF Model.arrayIDPrograma[i] = Entity.SequenceNum
		
		{ Comprobamos si el nodo esta aislado}	
		FOR j:=1 TO Model.nCanales
			x := GetArrayValue(Model.arrayCanales, 0, i);
			IF x = -1
				aislado


		{Canales izq}
		x := GetArrayValue(Model.arrayCanales, 0, i);
		y1 := GetArrayValue(Model.arrayCanales, 1, i);
		
		{Canales der}
		x2 := GetArrayValue(Model.arrayCanales, 0, i - 1);
		y2 := GetArrayValue(Model.arrayCanales, 1, i - 1);

		IF !aislado

			distIzq := calcularDistIzq()
			distDer := calcularDistDer()
	
			IF (distIzq < distDer)
				SetArrayValue(tmpArrIdPrograma, arrIndex, i);
				SetArrayValue(tmpArrIdPrograma, izqIndex, i + 1);
				IF distIzq > maxDist
					maxDist := distIzq;
				END IF
				arrIndex := arrIndex + 1;
			ELSE
				SetArrayValue(tmpArrIdPrograma, arrIndex, i);
				SetArrayValue(tmpArrIdPrograma, derIndex, i + 1);
				IF distDer > maxDist
					maxDist := distDer;
				END IF
				arrIndex := arrIndex + 1;
			END IF;
		ELSE
			tempNumNodos := tempNumNodos - 1;
			IF tempNumNodos < Entity.nProcesos
				EXIT; 
			END IF;

		END IF;

	END IF;


END FOR;
